after_context: 5
before_context: 3
#folder: 'tests'
parallel: true
folder: "dummy_tests"
interactive_files: true
quiet: false
rules:
  "//defaults/*[self::Dict or self::List or self::Set or self::Call]":
    name: "mutable-defaults"
    description: "Can create bugs that are hard to find"
    severity: "error"
    why: "bad practice"
    use_in_linter: true
  ".//Constant[not(ancestor::Assign) and re:match('https?://', @value)]":
    name: "deafult with url"
    description: "In the past, this behavior a lot of trouble for ours iot team"
    why: "bad practice"
    severity: "warning"
    use_in_linter: false
  "//ClassDef[re:match('.*Var', @name)]":
    name: "B001"
    description: "Classes with 'Var' in name"
    severity: "warning"
    why: "bad practice"
    use_in_linter: true
  "//defaults/Name[(pyastrx:anyin(//FunctionDef/@name, @id))]":
    name: "B002"
    description: "Default name is the same as function name"
    severity: "warning"
    why: "bad practice"
    use_in_linter: true
  "//FunctionDef[@name=body//Call/func/Name/@id and not(parent::node()/parent::ClassDef)]":
    name: "B003"
    description: "recursion func"
    severity: "info"
    why: "bad practice"
    use_in_linter: true
  "//ClassDef/body/FunctionDef[@name=body//Call/func/Attribute[value/Name[@id='self']]/@attr]":
    name: "recursion class"
    description: "Recursion"
    severity: "info"
    why: "just a info"
    use_in_linter: false
  "//FunctionDef/body/Global/names[not(item=../../Assign/targets/Name/@id)]":
    name: "unncessary-global"
    description: "Global variables are not used"
    severity: "error"
    why: "bad practice"
    use_in_linter: false
  "//Global":
    name: "global-keyword"
    description: "Changing the values of global variables creates bugs"
    severity: "info"
    why: "bad practice"
    use_in_linter: false

